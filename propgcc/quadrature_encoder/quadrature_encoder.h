//
// automatically generated by spin2cpp v1.05 on Mon Jul 29 16:31:25 2013
// spin2cpp quadrature_encoder.spin 
//

#ifndef quadrature_encoder_Class_Defined__
#define quadrature_encoder_Class_Defined__

#include <stdint.h>

/** 
 * This object stores encoder ticks in a signed 4 byte int sized 
 * variable. This means that there is some chance of overflow the encoder is
 * used in a single direction continuously. To calculate the maximum distance in
 * a single direction use the following equation:
 * 
 * maxDistanceInMiles = (2^31)* wheelDiameterInFeet * pi / ticksPerWheelRevolution /5280
 * 
 * For a robot with 6" diameter wheels and 144 ticks per wheel revolution the
 * maximum distance in a single direction is 4,436 mi.
 * 
 * However, for a robot with 6" diameter wheels, a 2048 tick encoder on the
 * motor shaft and a 100:1 gearbox, the maximum distance is 3.1 miles.
 * 
 * Therefore, you should chose your encoder, gearbox, and wheel combination to
 * match the precision that you need (distance per tick) while minimize the
 * total ticks per revolution.
 */

class quadrature_encoder {
public:
    static uint8_t dat[];
    int32_t Start(int32_t Startpin, int32_t Numenc, int32_t Numdelta, int32_t Posaddr);
    int32_t Stop(void);

private:
    volatile int Pos;
    volatile int Pin;
    volatile int NumberOfEncoders;
    uint8_t Cog;
    uint8_t Totdelta;


    //int32_t	Readdelta(int32_t Encid);
};

#endif
